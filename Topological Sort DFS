#include <bits/stdc++.h> 
void dfs(int node, stack<int> &st, vector<vector<int>> &adj, vector<int> &vis){
    vis[node] = 1;
    for(auto it : adj[node]){
        if(!vis[it]){
            dfs(it, st, adj, vis);
        }
    }
    st.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    stack<int> st;
    vector<vector<int>> adj(v);
    vector<int> vis(v,0);


    for(auto i : edges)
        adj[i[0]].push_back(i[1]);

    for(int i=0; i<v; i++){
        if(!vis[i])
            dfs(i, st, adj, vis);
    }

    vector<int> topo;
    while(!st.empty()){
        topo.push_back(st.top());
        st.pop();
    }

    return topo;
}
