#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    vector<int> ans;
    if(root == NULL) return ans;
    map<int,vector<int>> mp;
    queue<pair<TreeNode<int>*, int>> q;
    q.push({root, 0});

    while(!q.empty()){
        int sz = q.size();
        for(int i=0; i<sz; i++){
            pair<TreeNode<int>*, int> p = q.front();
            q.pop();

            TreeNode<int> *f = p.first;
            int l = p.second;

            mp[l].push_back(f->data);
            if(f->left != NULL){
                q.push({f->left, l - 1});
            } 
            if(f->right != NULL){
                q.push({f->right, l + 1});
            } 
        }
    }
    for (auto i : mp) {
        for(auto j : i.second)
        ans.push_back(j);
    }
    return ans;
}
