#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getTopView(TreeNode<int> *root) {
    vector<int> ans;
    if(root == NULL) return ans;
    map<int,int> mp;
    queue<pair<TreeNode<int>*, int>> q;
    q.push({root, 0});

    while(!q.empty()){
        int sz = q.size();
        for(int i=0; i<sz; i++){
            pair<TreeNode<int>*, int> p = q.front();
            q.pop();

            TreeNode<int> *f = p.first;
            int l = p.second;
            
            if(mp.find(l) == mp.end())
                mp[l] = f->val;
            
            if(f->left != NULL){
                q.push({f->left, l - 1});
            } 
            if(f->right != NULL){
                q.push({f->right, l + 1});
            } 
        }
    }
    for(auto i : mp)
        ans.push_back(i.second);
    return ans;
}
