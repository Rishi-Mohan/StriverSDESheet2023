#include <bits/stdc++.h> 
bool solve(int ind, int n, int k, vector<int> &arr,  vector<vector<int>> &dp){
    if(ind >= n){
        return k == 0;
    }

    if(dp[ind][k] != -1) return dp[ind][k];

    bool take = 0;
    
    bool nottake = solve(ind + 1, n, k, arr, dp);
    
    if(arr[ind] <= k){
        take = solve(ind + 1, n, k - arr[ind], arr, dp);
    }

    return dp[ind][k] = (take | nottake);
}
bool subsetSumToK(int n, int k, vector<int> &arr) {
    vector<vector<int>> dp(n + 1, vector<int>(k + 1, -1));
    return solve(0, n, k, arr, dp);
}
