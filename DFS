void dfs(int node, vector<int> &temp, vector<int> &vis, vector<vector<int>> &adj){
    vis[node] = 1;
    temp.push_back(node);
    for(auto i : adj[node]){
        if(!vis[i])
            dfs(i, temp, vis, adj);
    }
}
vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    vector<vector<int>> ans;
    vector<int> vis(V);

    vector<vector<int>> adj(V);
    for (vector<int> a : edges) {
      adj[a[0]].push_back(a[1]);
      adj[a[1]].push_back(a[0]);
    }

    for(int i=0; i<V; i++){
        if(!vis[i]){
            vector<int> temp;
            dfs(i, temp, vis, adj);
            ans.push_back(temp);
        }
    }
    return ans;
}
