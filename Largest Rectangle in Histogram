#include<stack>
 int largestRectangle(vector < int > & h) {
   int n = h.size();
   
   vector<int> right(n, n);
   stack<int> st;
   // right smaller
   for(int i=n-1; i>=0; i--){
     while(!st.empty() && h[st.top()] > h[i]){
       st.pop();
     }
     if(!st.empty()) right[i] = st.top();
     st.push(i);
   }

   vector<int> left(n, -1);
   stack<int> l;
   // left smaller
   for(int i=0; i<n; i++){
     while(!l.empty() && h[l.top()] >= h[i]){
       l.pop();
     }
     if(!l.empty()) left[i] = l.top();
     l.push(i);
   }

   int ans = 0;
   for(int i=0; i<n; i++){
     int res = (i - left[i] - 1) + (right[i] - i); // -1 for repetition of cur as length 
     ans = max(ans, res * h[i]); 
   }

   return ans;
 }
