/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */


Node *rotate(Node *head, int k) {
    if(head == NULL || k == 0 || head->next == NULL) return head;

    int len = 1; // for the last node as we are stopping at the last Node
    Node *cur = head;
    while(cur->next != NULL){
        len += 1;
        cur = cur->next;
    }

    cur->next = head; // cicle complete

    k %= len;

    for(int i=0; i<(len - k); i++){
        cur = cur->next;
    }

    head = cur->next;
    cur->next = NULL;

    return head;
}
